import "oaidl.idl";
import "ocidl.idl";

[
  object,
  uuid(954448CA-1894-4743-9261-BBE3C932FA26),
  oleautomation,
  nonextensible,
  helpstring("IScriptService Interface"),
  pointer_default(unique)
]
interface IScriptService : IUnknown
{
  HRESULT GetServiceFor([in, string] const OLECHAR* extensionId, [in, string] const OLECHAR* resourcesDir, [out, retval] LPUNKNOWN* ppUnk);
};

[
  uuid(2B2B8941-29D3-4F81-BB1C-381AA74C0E0D),
  version(1.0),
  helpstring("ScriptService 1.0 Type Library")
]
library ScriptServiceLib
{
  importlib("stdole2.tlb");

  [
    object,
    uuid(1CF497CD-54CE-4800-8160-3E684BBC8E55),
    oleautomation,
    nonextensible,
    helpstring("IScriptServiceScriptSource Interface"),
    pointer_default(unique)
  ]
  interface IScriptServiceScriptSource : IUnknown
  {
    HRESULT GetScriptFor([in] BSTR bsID, [out, retval] BSTR* pbsRet);
  };

  [
  object,
  uuid(8875B2E2-0AB1-4BF0-A82A-8538DBB5535B),
  oleautomation,
  nonextensible,
  helpstring("IScriptServiceInstance Interface"),
  pointer_default(unique)
  ]
  interface IScriptServiceInstance : IUnknown
  {
    [id(1), helpstring("Registers a new client tab id. Called from BHO before content scripts for particular tab are loaded.")]
    HRESULT RegisterTab([out, retval] INT *tabId);

    [id(2), helpstring("Retrieves ISalsitaApiService implementation from the service.")]
    HRESULT GetSalsitaApiService([out, retval] LPUNKNOWN /* ISalsitaApiService */ *pService);

    [id(3), helpstring("Loads the specified module unless it has been loaded already.")]
    HRESULT LoadModule([in, string] const OLECHAR* moduleID);

    [id(5), helpstring("Creates an IDispatch object based on given clsid and adds it as named item to the background script engine.")]
    HRESULT ScriptCreateNamedItem([in, string] const OLECHAR *name, [in] GUID clsId, [in] ULONG dwFlags);
  };

  [
    uuid(B5ABEF92-6105-46A2-9465-EA875E7FD25F),
    helpstring("ScriptService Class")
  ]
  coclass ScriptService
  {
    [default] interface IScriptService;
  };
};
